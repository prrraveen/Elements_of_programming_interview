from typing import List

from test_framework import generic_test


def intersect_two_sorted_arrays(xs: List[int], ys: List[int]) -> List[int]:
    return [a for


if __name__ == '__main__':
    exit(
        generic_test.generic_test_main('intersect_sorted_arrays.py',
                                       'intersect_sorted_arrays.tsv',
                                       intersect_two_sorted_arrays))

    # TODO - you fill in here.
    task_durations.sort()
    return [PairedTasks(task_durations[i], task_durations[~i]) for i in range(len(task_durations) // 2)]

    def _search_maze(curr):
        # check if its out of maze or is Black
        x, y = curr

        if x < 0 or x >= len(maze):
            return False

        if y < 0 or y >= len(maze[x]):
            return False


        if maze[x][y] == BLACK:
            return False


        maze[x][y] = BLACK
        path.append(curr)
        if curr == e:
            return True

        if any(map(_search_maze, (Coordinate(x - 1, y), Coordinate(x + 1, y), Coordinate(x, y - 1), Coordinate(x, y + 1)))):
            return True

        del path[-1]
        return False

    path = []
    if not _search_maze(s):
        return False
    return path
